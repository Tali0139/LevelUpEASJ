// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ConsoleDB
{
    public partial class LeveldbContext : DbContext
    {
        public LeveldbContext()
        {
        }

        public LeveldbContext(DbContextOptions<LeveldbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AchievementGift> AchievementGifts { get; set; }
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<ClientAppointment> ClientAppointments { get; set; }
        public virtual DbSet<ClientTraining> ClientTrainings { get; set; }
        public virtual DbSet<LevelUp> LevelUps { get; set; }
        public virtual DbSet<TrainingExercise> TrainingExercises { get; set; }
        public virtual DbSet<TrainingLevel> TrainingLevels { get; set; }
        public virtual DbSet<User> Users { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<AchievementGift>(entity =>
            {
                entity.ToTable("achievementGifts");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.DiscountPercentage).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.GiftItem).HasMaxLength(50);

                entity.Property(e => e.Price).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<Client>(entity =>
            {
                entity.ToTable("Client");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.FatPercent).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.Gender)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Weight).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<ClientAppointment>(entity =>
            {
                entity.ToTable("ClientAppointment");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.ClientAppointment1)
                    .HasColumnName("ClientAppointment")
                    .HasMaxLength(50);

                entity.Property(e => e.Exercise).HasMaxLength(10);
            });

            modelBuilder.Entity<ClientTraining>(entity =>
            {
                entity.HasKey(e => e.ExerciseId);

                entity.ToTable("ClientTraining");

                entity.Property(e => e.ExerciseId).ValueGeneratedNever();

                entity.Property(e => e.TrainingType).HasMaxLength(50);
            });

            modelBuilder.Entity<LevelUp>(entity =>
            {
                entity.ToTable("LevelUp");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.GoalName).HasMaxLength(50);

                entity.Property(e => e.XpEarned).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<TrainingExercise>(entity =>
            {
                entity.ToTable("TrainingExercise");

                entity.Property(e => e.Id).ValueGeneratedNever();
            });

            modelBuilder.Entity<TrainingLevel>(entity =>
            {
                entity.HasKey(e => e.TrainingId);

                entity.ToTable("TrainingLevel");

                entity.Property(e => e.TrainingId).ValueGeneratedNever();

                entity.Property(e => e.XpearnedByExercise)
                    .HasColumnName("XPEarnedByExercise")
                    .HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<User>(entity =>
            {
                entity.ToTable("User");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}